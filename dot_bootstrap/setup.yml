---
- name: Machine setup
  hosts: localhost
  become: true
  connection: local
  gather_facts: true

  tasks:
    - name: Get my user
      set_fact:
        remote_regular_user: "{{ ansible_env.SUDO_USER or ansible_user_id }}"

    - name: Install packages
      apt:
        name:
          - git
          - curl
          - htop
          - vim
          - build-essential
          - ripgrep
          - zsh
          - fzf
          - tmux
          - zlib1g
          - zlib1g-dev
          - patch
          - libssl-dev
          - luarocks
          - fd-find
          - direnv
          - tree
        state: present

    - name: Change shell to zsh
      user:
        name: "{{ remote_regular_user }}"
        shell: /usr/bin/zsh

    - name: Setup fonts, Tmux, and apply dotfiles
      become_user: "{{ remote_regular_user }}"
      block:
        - name: Ensure fonts directory exists
          file:
            path: "~/.fonts"
            state: directory
            mode: "0755"

        - name: Check if Jetbrains Mono exists
          stat:
            path: "~/.fonts/JetBrainsMonoNerdFontMono-Regular.ttf"
          register: jetbrains_mono_exists

        - name: Download and unpack Jetbrains mono font
          when: not jetbrains_mono_exists.stat.exists
          unarchive:
            src: https://github.com/ryanoasis/nerd-fonts/releases/download/v3.1.1/JetBrainsMono.zip
            dest: "~/.fonts/"
            remote_src: true

        - name: Clone Oh My Tmux repository
          git:
            repo: 'https://github.com/gpakosz/.tmux.git'
            dest: "~/.tmux"
            clone: yes
            update: yes

        - name: Create symlink for the main .tmux.conf
          file:
            src: "~/.tmux/.tmux.conf"
            dest: "~/.tmux.conf"
            state: link
            force: yes

        - name: Copy custom tmux config from chezmoi source
          ansible.builtin.copy:
            src: "~/.local/share/chezmoi/dot_tmux.conf.local"
            dest: "~/.tmux.conf.local"
            remote_src: yes
            force: yes
            mode: '0644'

        - name: Install zoxide via official script
          shell:
            cmd: "curl -sSfL https://raw.githubusercontent.com/ajeetdsouza/zoxide/main/install.sh | sh"
          args:
            creates: "~/.local/bin/zoxide"
          changed_when: true

        - name: Ensure custom zsh plugin/theme dirs exist
          file:
            path: "{{ item }}"
            state: directory
            mode: "0755"
          loop:
            - "~/.config/zsh/custom/plugins"
            - "~/.config/zsh/custom/themes"

        - name: Install Oh My Zsh
          ansible.builtin.git:
            repo: https://github.com/ohmyzsh/ohmyzsh.git
            dest: ~/.oh-my-zsh
            depth: 1
            update: true

        - name: Install zsh-autosuggestions plugin
          ansible.builtin.git:
            repo: https://github.com/zsh-users/zsh-autosuggestions.git
            dest: ~/.oh-my-zsh/custom/plugins/zsh-autosuggestions
            depth: 1
            update: true

        - name: Install zsh-syntax-highlighting plugin
          ansible.builtin.git:
            repo: https://github.com/zsh-users/zsh-syntax-highlighting.git
            dest: ~/.oh-my-zsh/custom/plugins/zsh-syntax-highlighting
            depth: 1
            update: true

        - name: Install zsh-fzf-history-search plugin
          ansible.builtin.git:
            repo: https://github.com/joshskidmore/zsh-fzf-history-search.git
            dest: ~/.oh-my-zsh/custom/plugins/zsh-fzf-history-search
            depth: 1
            update: true

        - name: Install fast-syntax-highlighting plugin
          ansible.builtin.git:
            repo: https://github.com/zdharma-continuum/fast-syntax-highlighting.git
            dest: ~/.oh-my-zsh/custom/plugins/fast-syntax-highlighting
            depth: 1
            update: true

        - name: Clone Neovim config repo
          ansible.builtin.git:
            repo: https://github.com/jmtzt/vim.git
            dest: ~/.config/nvim
            version: main
            depth: 1
            update: yes

        - name: Download latest Neovim release
          get_url:
            url: https://github.com/neovim/neovim/releases/latest/download/nvim-linux-x86_64.tar.gz
            dest: /tmp/nvim-linux-x86_64.tar.gz
            mode: "0644"

        - name: Remove old Neovim installation
          file:
            path: /opt/nvim-linux-x86_64
            state: absent

        - name: Extract Neovim to /opt
          unarchive:
            src: /tmp/nvim-linux-x86_64.tar.gz
            dest: /opt
            remote_src: yes

        - name: Ensure Neovim is in PATH
          lineinfile:
            path: ~/.zshrc
            regexp: '^export PATH=.*/opt/nvim-linux-x86_64/bin'
            line: 'export PATH="$PATH:/opt/nvim-linux-x86_64/bin"'
            insertafter: EOF
